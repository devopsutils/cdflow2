on:
  push:
    tags:
    - 'v*'

name: Build and publish release

jobs:
  build:
    name: Build and publish release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Test project
        run: ./test.sh
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Build project
        run: ./build.sh ${{ steps.get_version.outputs.VERSION }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload tarball
        id: upload-release-asset-tarball
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cdflow2-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: cdflow2-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload mac binary
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cdflow2-darwin-amd64
          asset_name: darwin-amd64/cdflow2
          asset_content_type: application/x-mach-binary
      - name: Upload linux binary
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cdflow2-linux-amd64
          asset_name: linux-amd64/cdflow2
          asset_content_type: application/x-executable
      - name: Upload windows binary
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cdflow2-windows-amd64
          asset_name: windows-amd64/cdflow2
          asset_content_type: application/vnd.microsoft.portable-executable       
  